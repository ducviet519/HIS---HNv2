@model System.App.Entities.TrainingCourse

@{
    List<SelectListItem> doituonghoc = new List<SelectListItem>();
    doituonghoc.Add(new SelectListItem() { Value = "All", Text = "Tất cả nhân viên", Disabled = true, Selected = Model.Objects == "All" ? true : false });
    doituonghoc.Add(new SelectListItem() { Value = "CBNV", Text = "Nhân viên", Selected = Model.Objects == "CBNV" ? true : false });
    doituonghoc.Add(new SelectListItem() { Value = "Bác sỹ", Text = "Bác sỹ", Selected = Model.Objects == "Bác sỹ" ? true : false });
    doituonghoc.Add(new SelectListItem() { Value = "Điều dưỡng", Text = "Điều dưỡng", Selected = Model.Objects == "Điều dưỡng" ? true : false });
    doituonghoc.Add(new SelectListItem() { Value = "KTV", Text = "Kỹ thuật viên", Selected = Model.Objects == "KTV" ? true : false });
    doituonghoc.Add(new SelectListItem() { Value = "NHS", Text = "NHS", Selected = Model.Objects == "NHS" ? true : false });

    List<SelectListItem> loaihinhdaotao = new List<SelectListItem>();
    loaihinhdaotao.Add(new SelectListItem() { Value = "0", Text = "Đào tạo trong bệnh viện", Selected = Model.Type == "0" ? true : false });
    loaihinhdaotao.Add(new SelectListItem() { Value = "1", Text = "Đào tạo ngoài bệnh viện", Selected = Model.Type == "1" ? true : false });
}
<div id="staticModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-content" style="width: 600px !important; ">
        <form action="/hcns/trainingcourse/save" id="submitForm">
            @Html.HiddenFor(x => x.ID, new { Value = Model.ID })
            <div class="form-group">
                <label for="type" class="control-label">Loại hình đào tạo</label>
                @Html.DropDownListFor(x => x.Type, loaihinhdaotao, new { @class = "form-control", @Style = "max-width: 100%;" })
            </div>
            <div class="form-group">
                <label for="name" class="control-label">Tên khóa học</label>
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Điền tên khóa học", required = true, Value = Model.Name })
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="place" class="control-label">Nơi tổ chức</label>
                        @Html.TextBoxFor(x => x.Place, new { @class = "form-control", placeholder = "Điền nơi tổ chức", required = true, Value = Model.Place })
                    </div>
                    <div class="col-md-6">
                        <label for="place" class="control-label">Đối tượng học</label>
                        @Html.DropDownListFor(x => x.Objects, doituonghoc, new { @class = "form-control" })
                    </div>
                </div>
            </div><!-- / .form-group -->

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="place" class="control-label">Từ ngày</label>
                        <div class="input-group date" data-provide="datepicker">
                            <input type="text" class="form-control datepicker" id="DateFrom" name="DateFrom" value="@Model.DateFrom.ToString("dd/MM/yyyy")" required>
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label for="place" class="control-label">Đến ngày</label>
                        <div class="input-group date" data-provide="datepicker">
                            <input type="text" class="form-control datepicker" id="DateTo" name="DateTo" value="@Model.DateTo.ToString("dd/MM/yyyy")" required>
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- / .form-group -->

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="place" class="control-label">Chi phí</label>
                        @Html.TextBoxFor(x => x.Cost, new { @class = "form-control", @Value = Model.Cost })
                    </div>
                    <div class="col-md-6">
                        <label for="place" class="control-label">Tổng số tiết học</label>
                        @Html.TextBoxFor(x => x.Lessions, new { @class = "form-control", @Value = Model.Lessions })
                    </div>
                </div>
            </div><!-- / .form-group -->

            <div class="form-group">
                <label for="name" class="control-label">Văn bằng chứng chỉ</label>
                @Html.TextBoxFor(x => x.Note, new { @class = "form-control", placeholder = "", @Value = Model.Note })
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-ok"></span> Lưu thông tin</button>
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-label="Close"><span class="glyphicon glyphicon-remove"></span> Đóng lại</button>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy'
        });

        $("#submitForm").submit(function (e) {
            var form = $(this);
            var url = form.attr('action');

            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(),
                success: function (data) {
                    if (data.result == true) {
                        $(this).callToast("success", '', 'Cập nhật thành công');
                    }
                    else {
                        $(this).callToast("error", '', 'Lỗi rồi, vui lòng kiểm tra lại.');
                    }
                }
            });

            e.preventDefault();
        });

        $.fn.clearData = function ($form) {
            $form.find('input:text, input:password, input:file, select, textarea').val('');
            $form.find('input:radio, input:checkbox')
                .removeAttr('checked').removeAttr('selected');
        }
    });
</script>